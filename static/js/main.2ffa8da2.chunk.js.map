{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","reportWebVitals.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","className","type","value","onChange","event","target","min","step","max","onClick","onCancel","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ffa8da2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n  return (\r\n    <form>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\" onClick={submitHandler}>\r\n          Add Expense\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n  const onSaveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={onSaveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import './Card.css'\r\nfunction Card(props) {\r\n    const classes = 'card ' + props.className\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from 'react';\r\nimport './ExpenseDate.css'\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No expense found.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"JAN\", value: 0 },\r\n    { label: \"FEB\", value: 0 },\r\n    { label: \"MAR\", value: 0 },\r\n    { label: \"APR\", value: 0 },\r\n    { label: \"MAY\", value: 0 },\r\n    { label: \"JUN\", value: 0 },\r\n    { label: \"JUL\", value: 0 },\r\n    { label: \"AUG\", value: 0 },\r\n    { label: \"SEP\", value: 0 },\r\n    { label: \"OCT\", value: 0 },\r\n    { label: \"NOV\", value: 0 },\r\n    { label: \"DEC\", value: 0 },\r\n  ];\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport \"./Expenses.css\";\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      <ExpensesChart expenses={filteredExpenses}/>\r\n      <ExpensesList items={filteredExpenses} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\n\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}